#include<iostream>
using namespace std;
template<class T>
class stack
{
  private:
   int top;
   T *store;
   int size;
  public:
   stack(){
       top=-1;
       size=0;
       
   }
   
   stack(int size){
     this->size=size;
     top=-1;
     store=new T[size];
   }
   int isfull(){
     if(top==size-1){
     return 1;
   }
   return 0;
   }
   int isempty(){
       if(top==-1){
           return 1;
       }
       return 0;
   }
   T Top(){
       
       return store[top];
   }
   void push(T data){
     if(!isfull())
     top++;
     store[top]=data;
   }
   void pop(){
       if(!isempty())
       top--;

   }
};
int main()
{
    
    int n;
    string e;
    cin>>n;
    while(n--){
            stack<char>s(30);
            cin>>e;
        for(int i=0;i<e.length();i++){
            if(s.isempty()){
                s.push(e[i]);
            }
            else{
                 if(e[i]=='{'||e[i]=='['||e[i]=='(')
                 s.push(e[i]);
                 if(e[i]=='}'&&s.Top()=='{')
                 s.pop();
                 if(e[i]==')'&&s.Top()=='(')
                 s.pop();
                 if(e[i]==']'&&s.Top()=='[')
                 s.pop();
            }
        }    
            if(s.isempty())
            cout<<"TRUE"<<endl;
            else
            cout<<"FALSE"<<endl;
    }
    return 0;
}